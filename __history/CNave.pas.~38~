unit CNave;

interface
uses
  Types,  Vcl.Graphics,
  Vcl.Controls;

type
  Nave = class
    //Canva Nave
    BtNave: TBitmap;

    color: TColor;

    ancho : integer;
    alto  : integer;
  private

  public
    constructor Create( color: TColor; ancho: integer; alto: integer );
    procedure dibujarNave;
    procedure setCanvas();
    function getCanvas(): TCanvas;

  end;

implementation

{ Nave }

constructor Nave.Create( color: TColor; ancho: integer; alto: integer);

begin
  Self.color := color;
  Self.ancho := ancho;
  Self.alto := alto;
  setCanvas();
  // Puedes cambiar clSkyBlue por el color que desees
  // Establece el color de fondo del Canvas del formulario

  dibujarNave();
end;

procedure Nave.setCanvas;
begin
  // Crea un objeto TBitmap para almacenar el dibujo
  BtNave:= TBitmap.Create;
  BtNave.Width := ancho;
  BtNave.Height := alto;
  BtNave.Canvas.Brush.Color := clNone;
  BtNave.Canvas.FillRect(BtNave.Canvas.ClipRect);
end;

function Nave.getCanvas: TCanvas;
begin
  Result := CvNave.Canvas;
end;

procedure Nave.dibujarNave;
begin
  // Dibuja La nave
  getCanvas().Brush.Color := color;
  getCanvas().Polygon([
    TPoint.Create(0,alto),
    TPoint.Create( ancho div 2, 0),
    TPoint.Create(ancho, alto)
  ]);

end;

end.
